//MIXINS
@mixin box-shadow($styles) {
  -webkit-box-shadow: $styles;
  -moz-box-shadow: $styles;
  -ms-box-shadow: $styles;
  -o-box-shadow: $styles;
  box-shadow: $styles;
}

@mixin prefixer($property, $value){
  -webkit-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  #{$property}: #{$value}
}

@mixin columns($count: 2, $gap: 0) {
  @include prefixer('column-count', $count);
  @include prefixer('column-gap', $gap);
}

@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder           { @content; }
  &::-moz-placeholder          { @content; }
  &:-ms-input-placeholder      { @content; }
}

@mixin breakpoint($point) {
  @if $point == big {
    @media (min-width: 1024px) { @content; }
  }
  @if $point == 1024 {
    @media (max-width: 1024px) { @content; }
  }
  @else if $point == 767 {
    @media (max-width: 767px) { @content; }
  }
  @else if $point == 479 {
    @media (max-width: 479px)  { @content; }
  }
  @else if $point == 320 {
    @media (max-width: 320px)  { @content; }
  }
}
  //@include breakpoint(big){};
  //@include breakpoint(1024){};
  //@include breakpoint(767){};
  //@include breakpoint(479){};
  //@include breakpoint(320){};

@mixin transition($property: all, $duration: .4s, $easing: ease) {
  -webkit-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
  -ms-transition: $property $duration $easing;
  -o-transition: $property $duration $easing;
  transition: $property $duration $easing;
}

@mixin transform($action, $backface: false) {
  @if $backface {
    -webkit-transform: $action;
    -moz-transform: $action;
    -ms-transform: $action;
    -o-transform: $action;
    transform: $action;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  } @else {
    -webkit-transform: $action;
    -moz-transform: $action;
    -ms-transform: $action;
    -o-transform: $action;
    transform: $action;
  }
}

@mixin user-select($select) {
  -webkit-touch-callout: $select;
  -webkit-user-select: $select;
  -khtml-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;
  user-select: $select;
}

@mixin backface-visibility($back: hidden) {
  -webkit-backface-visibility: $back;
  -moz-backface-visibility: $back;
  backface-visibility: $back;
}

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    -webkit-transform: translate(-50%, 0);
    transform: translate(-50%, 0);
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    -webkit-transform: translate(0, -50%);
    -moztransform: translate(0, -50%);
    transform: translate(0, -50%);
  }
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

@function rem($pxval) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  $base: $font-base;
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem;
}

/*@include plus(12,4,#000);*/

@mixin plus($width, $thickness, $color) {
  &:before, &:after {
    content: '';
    position: absolute;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    top: 50%;
    left: 20px;
    background: $color;
    @include transition();
  }
  &:after {
    width: $width+px;
    height: $thickness+px;
  }
  &:before {
    height: $width+px;
    width: $thickness+px;
  }
  &.opened {
    &:after {
      -webkit-transform: translate(-50%, -50%) rotate(180deg);
      -moz-transform: translate(-50%, -50%) rotate(180deg);
      -ms-transform: translate(-50%, -50%) rotate(180deg);
      transform: translate(-50%, -50%) rotate(180deg);
    }
    &:before {
      -webkit-transform: translate(-50%, -50%) rotate(90deg);
      -moz-transform: translate(-50%, -50%) rotate(90deg);
      -ms-transform: translate(-50%, -50%) rotate(90deg);
      transform: translate(-50%, -50%) rotate(90deg);
    }
  }
}
